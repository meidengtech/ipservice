# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ipsvc_pb2 as ipsvc__pb2


class IPSVCStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.IPQuery = channel.unary_unary(
        '/ipsvc.IPSVC/IPQuery',
        request_serializer=ipsvc__pb2.IPRequest.SerializeToString,
        response_deserializer=ipsvc__pb2.IPReply.FromString,
        )
    self.IPSQuery = channel.unary_unary(
        '/ipsvc.IPSVC/IPSQuery',
        request_serializer=ipsvc__pb2.IPsRequest.SerializeToString,
        response_deserializer=ipsvc__pb2.IPsReply.FromString,
        )


class IPSVCServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def IPQuery(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IPSQuery(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_IPSVCServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'IPQuery': grpc.unary_unary_rpc_method_handler(
          servicer.IPQuery,
          request_deserializer=ipsvc__pb2.IPRequest.FromString,
          response_serializer=ipsvc__pb2.IPReply.SerializeToString,
      ),
      'IPSQuery': grpc.unary_unary_rpc_method_handler(
          servicer.IPSQuery,
          request_deserializer=ipsvc__pb2.IPsRequest.FromString,
          response_serializer=ipsvc__pb2.IPsReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ipsvc.IPSVC', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
